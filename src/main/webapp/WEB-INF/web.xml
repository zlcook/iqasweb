<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name>Archetype Created Web Application</display-name>
 <!--  1.从类路径下加载spring配置文件，classpath关键字特指在类路径下加载 -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>  <!-- 如果有多个配置文件可用逗号（建议）、空格分隔 -->
  	
  </context-param>
  
  
  <!-- context-param -> listener -> filter -> servlet  -->
    <!-- 系统初始化过滤器，用于在系统初始化时启动JWS -->
   <listener>		
    <listener-class>com.cnu.iqas.listener.InitializedListener</listener-class>
  </listener> 
  <!-- 负责启动spring容器(WebApplicationContext类初始化 )的监听器，他将引用1处的上下文参数获得Spring配置文件地址 ，在spring-web包中-->
  <!-- 注意需要将log4j.properties日志配置文件放置在类路径下，以便日志引擎自动生效 -->
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
   

    <!-- 管理员登陆过滤 -->
  <filter>
    <display-name>AdminLoginFilter</display-name>
    <filter-name>AdminLoginFilter</filter-name>
    <filter-class>com.cnu.iqas.filter.AdminLoginFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AdminLoginFilter</filter-name>
    <url-pattern>/admin/control/*</url-pattern>
  </filter-mapping> 
  
    <!-- 编码过滤器 -->
  <filter>
        <filter-name>codeFilter</filter-name>
        <filter-class>com.cnu.iqas.filter.Encoding</filter-class>
        <init-param>
        	<param-name>charset</param-name>
        	<param-value>UTF-8</param-value>
        </init-param>
 </filter>
 <filter-mapping>
      <filter-name>codeFilter</filter-name>
      <url-pattern>/*</url-pattern>
 </filter-mapping>  
 
	 <!-- 配置SpringMVC相关信息，SpringMVC像struts一样，也通过一个Servlet截获URL请求，然后再进行相关的处理 -->
	 
	 <!-- Spring MVC的主控Servlet,在spring-webmvc包中，
	  Spring MVC也拥有一个Spring配置文件，该配置文件的文件名和此处定义的Servlet名有一个契约：即采用：Servlet名-servlet.xml ,
	  在这里Servlet名为viewspace,所以在/WEB-INF目录下必须提供一个viewspace-servlet.xml的Spring MVC配置文件.
	  此处配置名为viewspace的DispatcherServlet,它默认自动加载/WEB-INF/viewspace-servlet.xml的Spring配置文件，启动Web层的Spring容器
	  -->
	 <servlet>
	 	<servlet-name>viewspace</servlet-name>
	 	<servlet-class> org.springframework.web.servlet.DispatcherServlet</servlet-class>
	 	<load-on-startup>2</load-on-startup>
	 </servlet>
	 <!-- Spring MVC处理的URL,/*处理所有请求，*.html只过滤html结尾的请求 -->
	 <servlet-mapping>
	 	<servlet-name>viewspace</servlet-name>
	 	<url-pattern>*.html</url-pattern>
	 </servlet-mapping>
	 
	 
	<!-- 配置访问页面资源不存在异常 -->
	<error-page>
		<error-code>404</error-code>
		<location>/errors/404.jsp</location>
	</error-page>


	<!-- 未知异常 -->
	<error-page>
		<exception-type>Exception</exception-type>
		<location>/errors/UnKnowException.jsp</location>
	</error-page>

	<!-- 服务器端出现异常错误 -->
	<error-page>
		<error-code>500</error-code>
		<location>/errors/500.jsp</location>
	</error-page>
    
	 
	 <welcome-file-list>
	 	<welcome-file>index.jsp</welcome-file>
	 </welcome-file-list>
	
</web-app>
